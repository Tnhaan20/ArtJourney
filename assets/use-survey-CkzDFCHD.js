import{a3 as r,n as v,a4 as m,a6 as g,a5 as i,a7 as t}from"./index-DjxuTRRS.js";const a={post:{submitService:async e=>(await r.post("/Survey/submit",e)).data},get:{getSurveyQuestions:async()=>(await r.get("/Survey/questions")).data,getMySurvey:async()=>(await r.get("/Survey/my-survey")).data}},d=()=>{const{toast:e}=v(),u=new m,o=g({mutationKey:[t.SURVEY.CREATE_SUBMISSION],mutationFn:async s=>await a.post.submitService(s),onSuccess:async s=>{e({title:"Survey submitted successfully",description:s.message,variant:"success"})},onError:s=>{var n,y;e({title:"Survey submission failed",description:((y=(n=s.response)==null?void 0:n.data)==null?void 0:y.message)||"Failed to submit survey",variant:"destructive"})},onSettled:()=>{u.invalidateQueries({queryKey:[t.REGIONS.GET_ALL_REGIONS]})}}),c=i({queryKey:[t.SURVEY.GET_QUESTIONS],queryFn:async()=>await a.get.getSurveyQuestions()}),S=i({queryKey:[t.SURVEY.GET_MY_SURVEY],queryFn:async()=>await a.get.getMySurvey()});return{createSurveySubmission:o,getSurveyQuestionsQuery:c,getMySurveyQuery:S}};export{d as u};
